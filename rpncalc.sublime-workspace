{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sta",
				"stack_lock"
			],
			[
				"RP",
				"RPNCALC_E_NOMEM"
			],
			[
				"RE",
				"RPNCALC_E_NOMEM"
			],
			[
				"RPN",
				"RPNCALC_E_SUCCESS"
			],
			[
				"Su",
				"RPNCALC_E_SUCCESS"
			],
			[
				"E",
				"RPNCALC_E_SUCCESS"
			],
			[
				"E_",
				"RPNCALC_E_INVALID"
			],
			[
				"rpn",
				"rpncalc_entry"
			],
			[
				"on",
				"onServicesDiscover"
			],
			[
				"time",
				"timestamp"
			],
			[
				"m",
				"meanArterialPressure"
			],
			[
				"MDE",
				"MDER_S_NEGATIVE_INFINITY"
			],
			[
				"pending",
				"pendingVariableChanged"
			],
			[
				"send",
				"sendPendingVariableChanged"
			],
			[
				"bridge",
				"bridgeDevice"
			],
			[
				"power",
				"powerLedCycle"
			],
			[
				"set",
				"setRampRateReply"
			],
			[
				"stat",
				"statSync"
			],
			[
				"log",
				"logSelected"
			],
			[
				"newBridge",
				"newBridgeFolder"
			],
			[
				"delet",
				"deleteBridge"
			],
			[
				"reload",
				"reloadDescriptionReply"
			],
			[
				"getD",
				"getDescriptionReply"
			],
			[
				"remote",
				"remoteLoggingPort"
			],
			[
				"start",
				"startRemoteLogging"
			],
			[
				"enable",
				"enableRemoteLogging"
			],
			[
				"remoteLoggin",
				"remoteLoggingEnabled"
			],
			[
				"re",
				"remoteLoggingPort"
			],
			[
				"wakt",
				"wakeUpIntervalStep"
			],
			[
				"Op",
				"OpenZWave"
			],
			[
				"conso",
				"consoleOutput"
			],
			[
				"BUID",
				"BUILD_HOME"
			],
			[
				"un",
				"unconfiguredNodeInfos"
			],
			[
				"unconfiguredNode",
				"unconfiguredNodeValues"
			],
			[
				"unconfigured",
				"unconfiguredNodeInfos"
			],
			[
				"uncon",
				"unconfiguredNodeInfos"
			],
			[
				"new",
				"newDiscoveredDevice"
			],
			[
				"removed",
				"removedNode"
			],
			[
				"removeNode",
				"removeNodeInProgress"
			],
			[
				"addNo",
				"addNodeInProgress"
			],
			[
				"context",
				"context_obj"
			],
			[
				"zno",
				"znodes_mutex"
			],
			[
				"cb",
				"cbData"
			],
			[
				"ctrlCmdCb",
				"ctrlCmdCbQueue"
			],
			[
				"Add",
				"AddNodeCb"
			],
			[
				"Ca",
				"CancelRemoveNode"
			],
			[
				"AR",
				"Arguments"
			],
			[
				"A",
				"Arguments"
			],
			[
				"NODE",
				"NODE_SET_PROTOTYPE_METHOD"
			],
			[
				"Hand",
				"HandleScope"
			],
			[
				"DRIVER_TYPE_",
				"DRIVER_TYPE_MANUFACTURER"
			],
			[
				"c",
				"cmdClsInfo"
			],
			[
				"wake",
				"wakeUpInterval"
			],
			[
				"COMM",
				"COMMAND_CLASS_WAKE_UP"
			],
			[
				"COMMAND_CLASS_WAKE",
				"COMMAND_CLASS_WAKE_UP_VALUE_WAKE_UP_INTERVAL"
			],
			[
				"COMMAND",
				"COMMAND_CLASS_WAKE_UP"
			],
			[
				"Update",
				"UpdateMappedClass"
			],
			[
				"de",
				"description"
			],
			[
				"COMMAND_CLASS_SENSOR_BINARY",
				"COMMAND_CLASS_SENSOR_BINARY_VALUE_SENSOR"
			],
			[
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_VALUE_FAN_MODE_OPTION_",
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_VALUE_FAN_MODE_OPTION_ON_LOW"
			],
			[
				"COMMAND_CLASS_THERMOSTAT_SETPOINT_Valu",
				"COMMAND_CLASS_THERMOSTAT_SETPOINT_VALUE_HEATING_1"
			],
			[
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_Fan",
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_Fan_Mode_On_Low"
			],
			[
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_Fan_Mode_",
				"COMMAND_CLASS_THERMOSTAT_FAN_MODE_Fan_Mode_Auto_Low"
			],
			[
				"OP",
				"OpenZWave"
			],
			[
				"COMMAND_CLASS_THERMOSTAT_SETPO",
				"COMMAND_CLASS_THERMOSTAT_SETPOINT_Cooling_1"
			],
			[
				"New",
				"NewSymbol"
			],
			[
				"C",
				"COMMAND_CLASS_THERMOSTAT_SETPOINT"
			],
			[
				"COMMAND_CLASS_THER",
				"COMMAND_CLASS_THERMOSTAT_MODE"
			],
			[
				"process",
				"processBasicReport"
			],
			[
				"comma",
				"CommandClassSupported"
			],
			[
				"Valu",
				"ValueID"
			],
			[
				"poll",
				"poll_intensity"
			],
			[
				"node",
				"nodeAdded"
			],
			[
				"COMMAN",
				"COMMAND_CLASS_SWITCH_MULTILEVEL"
			],
			[
				"command",
				"commandClass"
			],
			[
				"COM",
				"COMMAND_CLASS_SWITCH_MULTILEVEL"
			],
			[
				"proto",
				"prototype"
			],
			[
				"pe",
				"pendingLevel"
			],
			[
				"COMA",
				"COMMAND_CLASS_SWITCH_MULTILEVEL_Level"
			],
			[
				"ozwValue",
				"ozwValueAdded"
			],
			[
				"last",
				"lastOnlineUpdate"
			],
			[
				"matched",
				"matchedSignatures"
			],
			[
				"matchedDe",
				"matchedDeviceAddresses"
			],
			[
				"match",
				"matchedSignatures"
			],
			[
				"device",
				"deviceAddress"
			],
			[
				"devic",
				"deviceId"
			],
			[
				"devi",
				"deviceId"
			],
			[
				"ser",
				"serviceNames"
			],
			[
				"loo",
				"lookupMac"
			],
			[
				"clear",
				"clearDiscoveredOnline"
			],
			[
				"sia",
				"signatureId"
			],
			[
				"dev",
				"devId"
			],
			[
				"idi",
				"identifierOverrides"
			],
			[
				"ident",
				"identifierOverrides"
			],
			[
				"seenDev",
				"seenDevicesByAddress"
			],
			[
				"seen",
				"seenDevicesByAddress"
			],
			[
				"inde",
				"identifier"
			],
			[
				"getDi",
				"getDiscoveredReply"
			],
			[
				"get",
				"getRollbacks"
			],
			[
				"rollback",
				"rollbackId"
			],
			[
				"package",
				"packageCache"
			],
			[
				"B",
				"BUILD_HOME"
			],
			[
				"kill",
				"killDaemonAndExit"
			],
			[
				"firm",
				"firmware_len"
			],
			[
				"fir",
				"firmware_start_buf"
			],
			[
				"firmware",
				"firmware_found"
			],
			[
				"end",
				"end_at_offset"
			],
			[
				"start_at",
				"start_at_buf"
			],
			[
				"star",
				"start_at_offset"
			],
			[
				"conten",
				"content_disp_found"
			],
			[
				"header_",
				"header_value"
			],
			[
				"buf",
				"buf_offset"
			],
			[
				"read_data",
				"read_form_data_content"
			],
			[
				"fire",
				"firmware_buf_cnt"
			],
			[
				"multip",
				"multipart_parser"
			],
			[
				"mut",
				"multipart_parser"
			],
			[
				"mul",
				"multipart_parser"
			],
			[
				"CON",
				"CONTENT_TYPE_FORMDATA"
			],
			[
				"firmare",
				"firmware_buf_cnt"
			],
			[
				"CONTE",
				"CONTENT_TYPE_FORMDATA"
			],
			[
				"CONTEN",
				"CONTENT_TYPE_URLENCODED"
			],
			[
				"CONT",
				"CONTENT_TYPE_URLENCODED"
			],
			[
				"Conte",
				"CONTENT_TYPE"
			],
			[
				"F",
				"FIRMWARE_BUF_SIZE"
			],
			[
				"pro",
				"properties"
			],
			[
				"SAH",
				"SHA256_BLOCK_SIZE"
			],
			[
				"SHA",
				"SHA256_BLOCK_SIZE"
			],
			[
				"DE",
				"DECRYPT_BUFFER"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 158,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rpncalc.c",
			"settings":
			{
				"buffer_size": 12002,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rpncalc.h",
			"settings":
			{
				"buffer_size": 495,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 347.0,
		"selected_items":
		[
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"pack",
				"Package Control: List Packages"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/daniel/Projects/code-samples/rpncalc"
	],
	"file_history":
	[
		"/Users/daniel/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Volumes/daniel/Projects/code-samples/rpncalc/rpncalc.h",
		"/Volumes/daniel/Projects/code-samples/rpncalc/rpncalc.c",
		"/Users/daniel/Documents/K4/src/bluetooth/index.js",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.bluetooth.bridge/characteristics/com.bluetooth.characteristic.blood_pressure_measurement.jse",
		"/Volumes/daniel/schema.sql",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/God/ForkMode.js",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/loader/startup.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4/message.jse",
		"/Users/daniel/Documents/K4/svn/k4/node_modules/k4/message.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/message/reset.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/stop.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/God.js",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/CLI.js",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/God/ActionMethods.js",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/Satan.js",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2/lib/God/Reload.js",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/packages.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/message/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/message/users.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4/config.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.philips.hue.bridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/rollbacks.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/loader/loader.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/fixperms.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/dpkg.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/dpkgwrap.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/dpkg_wrap.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/update/api.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4/logging.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/loader/powerled.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.binaryswitch.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.binarysensor.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.nest.bridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.apple.itunesbridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.apple.itunesbridge/api.jse",
		"/Users/daniel/Documents/K4/src/gcm_test.js",
		"/Volumes/daniel/Documents/K4/svn/k4/debug.json",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/drivers.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/backup.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/restore_remote.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/backup_remote.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/restore.sh",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.x10.switch.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/constants.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.insteon.thermostat.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.insteon.switch.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/insteon/openclosesensor.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.insteon.miniremote.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.insteon.keypaddimmer.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/insteon/keypaddimmer.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/classes/com.k4connect.insteon.dimmer.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/insteon.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/upnp/SonosAVTransport.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/com.k4connect.belkin.socket.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/com.k4connect.belkin.switch.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/com.k4connect.sonos.speaker.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/com.k4connect.upnp.mediaplayer.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge/classes/com.k4connect.belkin.sensor.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/node_modules/upnp/upnp.js",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/constants.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.thermostat.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/base/thermostat.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Options.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.entrycontrol.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.aeotec.multisensor.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/insteon/bridge.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.multilevelswitch.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/backup.json",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/www/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/db.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Msg.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Msg.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Defs.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Driver.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Driver.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/platform/Controller.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/platform/Controller.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/platform/unix/SerialControllerImpl.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/analytics/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers/com.k4connect.zwave.multilevelsensor.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/zwave/multilevelsensor.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/receive.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/parser.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge/send.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/src/openzwave.cc",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/notification/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/www/processes.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/message/status.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/discovered.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/descriptions.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/getDiscovered.js",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/action/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/action/steps.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/camera/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/actions.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/config.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/setup/parse.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/test/enable.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/test/disable.jse",
		"/Volumes/daniel/logserver.js",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/test/server.jse",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/config/manufacturer_specific.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/Security.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/OZW_Log_Yale.txt",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/OZW_Log_Schlage.txt",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Node.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Node.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/OZW_Log.txt",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/zwcfg_0x0184e96e.xml",
		"/Users/daniel/Downloads/openzwave-1.1.903/cpp/src/command_classes/Security.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/SensorMultilevel.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/CommandClass.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/WakeUp.cpp",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/WakeUp.h",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/CommandClass.h",
		"/Volumes/daniel/Documents/K4/svn/libs/zwave/com.k4connect.zwave.bridge/com.k4connect.zwave.bridge/Drivers/AeotecDoorWindowSensorDriver.cs",
		"/Volumes/daniel/Documents/K4/svn/libs/zwave/com.k4connect.zwave.bridge/com.k4connect.zwave.bridge/Drivers/AeotecMultiSensorDriver.cs",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes/Version.h",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/aeotec/multisensor.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices/com.k4connect/zwave/bridge.xml",
		"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/Options.cpp"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Volumes/daniel/Documents/K4/svn/k4",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/loader",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/loader",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/pm2",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/loader",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/update",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/upnp",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.upnp.bridge",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/config",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/config",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/message",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/config",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/message",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/config",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/drivers",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/classes/",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.zwave.bridge/openzwave/deps/open-zwave/cpp/src/command_classes",
			"/Volumes/daniel/Documents/K4/svn/k4/bridges/com.k4connect.insteon.bridge",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/discovery",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/mdns2/src",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/mdns2",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/discovery",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/config/devices",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch/arm/plat-rk",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch/arm",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/drivers",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch/arm/mach-rk30",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch/arm/mach-rk3188",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/socket.io-client/lib",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/socket.io-client",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4",
			"/Volumes/daniel/Documents/K4/svn/build/ubuntu",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/setup",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/www",
			"<open files>",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/k4",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/setup",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/discovery",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/net/bluetooth",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/include",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/net/bluetooth",
			"/Volumes/daniel/Documents/K4/svn/rockchip/rtl8723as",
			"/Volumes/daniel/Documents/K4/svn/rockchip/kernel/arch/arm",
			"/Volumes/daniel/Documents/K4/svn/rockchip/rtl8723as",
			"/Volumes/daniel/Documents/K4/svn/k4/node_modules/bleno",
			"<open files>",
			"/Volumes/daniel/Documents/K4/svn/k4/servers/message",
			"<open files>",
			"/Volumes/daniel/Documents/K4/rkimage/RK3188_R-BOX_ANDROID4.2.2-SDK_V1.0.0_130514/kernel/drivers/net/wireless/rkusbwifi/rtl8723au",
			"/Volumes/daniel/Documents/K4/rkimage/RK3188_R-BOX_ANDROID4.2.2-SDK_V1.0.0_130514/kernel"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"new_entry",
			"list_",
			"EMPTY",
			"down",
			"()",
			"stdout",
			"connectToMessageQueue",
			"powerLedOn",
			"rk30_adc",
			"k4home",
			"exist",
			"doesn't",
			"startProcessId",
			"executeApp",
			"handleExit",
			"executeApp",
			"cb",
			"complete",
			"oncomplete",
			"cb(",
			"doesn't exist",
			"Raytheon Company",
			"doesn't exist",
			"spawn",
			"cspr",
			"cb",
			"getLoaderPid",
			"console.log",
			"properties.id.value",
			"lights",
			"poll",
			"http",
			"SIGTERM",
			"applyRollback",
			"installPackage",
			"installUpdate",
			"powerLedBlinkStart",
			"powerLedBlinkStop",
			"bridgeDevice",
			"guid",
			"bridgeClass",
			"send",
			"mdns",
			"browser",
			"mdns",
			"fail",
			"bridge.ipaddress",
			"bridge",
			"api.",
			"bridge",
			"ipaddress",
			"remoteLoggingPort",
			"api",
			"installPackage",
			"api.",
			"api.getPackage",
			"cloud",
			"checkin",
			"AddURI",
			"getDeviceDescriptor",
			"getXmlDoc",
			"getDeviceDescriptor",
			"getXmlDoc",
			"RETRY_TIMEOUT",
			"ignoremapping",
			"rejectUnauthorized",
			"buildTree",
			"processed",
			"buildTree",
			"getBridges",
			"isDirectory",
			"m_length",
			"m_buffer[5]",
			"m_flags",
			"m_buffer[",
			"SOF",
			"WriteMsg",
			"Write",
			"WriteNextMsg",
			"SendMsg",
			"DeviceTree",
			"logServerStarted",
			"handleGetNotifications",
			"configuredNodeInfos",
			"msg.data.args",
			"msg.data.variables",
			"messageHandler",
			"setVariable",
			"getUpdates",
			"setVariable",
			"processIncomingStdMessage",
			"constants.ACK",
			"ACK",
			"baud",
			"nodeEvent",
			"saveBridge",
			"getBridge",
			"newBridge",
			"getLog",
			"msg.reply",
			"readLog",
			"getLog",
			"handleSetNotificationRead",
			"handleGetNotifications",
			"/sys/module/rk30_adc/parameters/chn1",
			"buildStatusRow",
			"removeDescription",
			"reloadDescription",
			"cloudConnect",
			"cloudConnect//",
			"cloudConnect",
			"console.log",
			"handleSendNotification",
			"cloud",
			"getIcons",
			"handleGetNotifications",
			"serverName",
			"debugDisconnect",
			"debugConnect",
			"msg",
			"debugConnect",
			"updateIcon",
			"getDescription",
			"handleDeleteNotification",
			"config.scenes",
			"newBridge",
			"getBridges",
			"setLogLevel"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$1",
			"char"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 158,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "rpncalc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12002,
						"regions":
						{
						},
						"selection":
						[
							[
								5558,
								5558
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "rpncalc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 495,
						"regions":
						{
						},
						"selection":
						[
							[
								274,
								274
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 125.0
	},
	"output.find_results":
	{
		"height": 269.0
	},
	"output.unsaved_changes":
	{
		"height": 100.0
	},
	"project": "rpncalc.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
